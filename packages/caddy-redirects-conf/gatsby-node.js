
const fs = require("fs").promises

exports.onPostBuild = async ({ store }, pluginOptions) => {
  if(!pluginOptions.target){
    pluginOptions.target = "public/redirect.conf"
  }
  if(!pluginOptions.comment){
    pluginOptions.comment = "# Generated by caddy-redirects-conf Gatsby plugin"
  }
  const { redirects } = store.getState()
  const directives = redirects.map(redirect => {
    const {
      fromPath,
      isPermanent,
      // redirectInBrowser, // eslint-disable-line no-unused-vars
      toPath,
      statusCode,
      ...rest
    } = redirect

    let status = isPermanent ? `301` : `302`
    if (statusCode) status = statusCode
    const pieces = [fromPath, toPath, status]
    if(fromPath.trim() !== "/"){
      return 'redir '+pieces.join(` `)
    }else{
      return `redir ${status} {\n  if {path} is /\n  / /en/\n}`
    }
  })
  .sort()
  const data = `${pluginOptions.comment}\n\n${directives.join(`\n`)}\n`
  await fs.writeFile(`${pluginOptions.target}`, data)
}
